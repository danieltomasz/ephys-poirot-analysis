import poirot
print(poirot.__version__)
dir(poirot.visualize)
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('TkAgg')
from  poirot.visualize import create_slope_from_parameters
taps = {
"offset": [-16.237085, -15.772295],
"exponent": [1.18727834, 2.367788],
"condition": ["OLD", "YOUNG"],
"subjectID": ["sub-032528", "sub-032448"],
}
aps = pd.DataFrame(taps)
final_list = create_slope_from_parameters(
aps, ["condition", "subjectID"]
)
p = poirot.visualize.plot_lines(final_list)
p.show()
python_df = r.my_python_data
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('TkAgg')
from  poirot.visualize import create_slope_from_parameters
taps = {
"offset": [-16.237085, -15.772295],
"exponent": [1.18727834, 2.367788],
"condition": ["OLD", "YOUNG"],
"subjectID": ["sub-032528", "sub-032448"],
}
aps = pd.DataFrame(taps)
final_list = create_slope_from_parameters(
aps, ["condition", "subjectID"]
)
p = poirot.visualize.plot_lines(final_list)
p.show()
python_df = r.my_python_data
python_df = r.py_mean
final_list = create_slope_from_parameters(
aps, ["Y_OH_OL"]
)
import poirot
print(poirot.__version__)
dir(poirot.visualize)
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('TkAgg')
from  poirot.visualize import create_slope_from_parameters
taps = {
"offset": [-16.237085, -15.772295],
"exponent": [1.18727834, 2.367788],
"condition": ["OLD", "YOUNG"],
"subjectID": ["sub-032528", "sub-032448"],
}
aps = pd.DataFrame(taps)
final_list = create_slope_from_parameters(
aps, ["condition", "subjectID"]
)
p = poirot.visualize.plot_lines(final_list)
p.show()
python_df = r.my_python_data
import poirot
print(poirot.__version__)
dir(poirot.visualize)
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('TkAgg')
from  poirot.visualize import create_slope_from_parameters
taps = {
"offset": [-16.237085, -15.772295],
"exponent": [1.18727834, 2.367788],
"condition": ["OLD", "YOUNG"],
"subjectID": ["sub-032528", "sub-032448"],
}
aps = pd.DataFrame(taps)
final_list = create_slope_from_parameters(
aps, ["condition", "subjectID"]
)
p = poirot.visualize.plot_lines(final_list)
p.show()
python_df = r.my_python_data
python_df = r.py_mean
final_list = create_slope_from_parameters(
aps, ["Y_OH_OL"]
)
python_df = r.py_mean
final_list = create_slope_from_parameters(
py_median, ["Y_OH_OL"]
)
python_df = r.py_mean
final_list = create_slope_from_parameters(
python_df, ["Y_OH_OL"]
)
python_df = r.py_mean
final_list = create_slope_from_parameters(
python_df, ["Y_OH_OL"]
)
from  poirot.visualize import plot_group_lines
import poirot
print(poirot.__version__)
dir(poirot.visualize)
import poirot
print(poirot.__version__)
dir(poirot.visualize)
import poirot
print(poirot.__version__)
dir(poirot.visualize)
#Sys.setenv(RETICULATE_PYTHON = "~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
library(reticulate)
reticulate::use_virtualenv("~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
reticulate::repl_python()
library(readr)
library(ggrain)
library(rlang)
library(patchwork)
library(glue)
library(dplyr)
library(ggpubr)
library(ggsignif)
library(here)
occipital_data_OH_OL <- read_csv(here("data/final/occipital_data_OH_OL.csv"), show_col_types = FALSE)
df <- occipital_data_OH_OL %>% select(c("TMT_5_zscor_tresh", "CVLT_DEL_MEM_zscor_tresh", "TAP_A_RT_zscor_tresh", "TAP_WM_6_zscor_tresh", "Y_OH_OL"))
my_comparisons <- list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H"))
single_plot <- function(df,x_var_data , x_var_y_name){
p <- ggboxplot(occipital_data_OH_OL,
x = "Y_OH_OL", y = x_var_data,
color = "Y_OH_OL", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Y_OH_OL"
) +
#  geom_signif(
#   comparisons = list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H")),
#  map_signif_level = TRUE, textsize = 6, test = "kruskal.test"
#) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif") +
labs(y = x_var_y_name) + theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.ticks.x = element_blank()
) +      labs(color='Age/education group', shape = 'Age/education group',) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1), add = c(1, 0)))
return(p)
}
Mem1 <-  single_plot(df, "CVLT_DEL_MEM_zscor_tresh", "Delayed memory") +     theme(axis.text.x = element_blank())
WM <-  single_plot(df, "TAP_WM_6_zscor_tresh", "Working Memory")+     theme(axis.text.x = element_blank())
TMT <- single_plot(df, "TMT_5_zscor_tresh", "Visual attention and flexibility")
TAP  <- single_plot(df, "TAP_A_RT_zscor_tresh", "Alertness")
fig <- (Mem1 + WM) / (TMT + TAP)  + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
fig
title<- glue('figures/behavioral_variables.png')
ggsave(here::here(title), fig,  device='png', dpi=1400)
df_paramas <- occipital_data_OH_OL %>% select(c("mean_exponent" , "mean_offset", "mean_peak_alpha" , "Y_OH_OL"))
my_comparisons <- list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H"))
single_plot <- function(df,x_var_data , x_var_y_name){
p <- ggboxplot(occipital_data_OH_OL,
x = "Y_OH_OL", y = x_var_data,
color = "Y_OH_OL", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Y_OH_OL"
) +
#  geom_signif(
#   comparisons = list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H")),
#  map_signif_level = TRUE, textsize = 6, test = "kruskal.test"
#) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif") +
labs(y = x_var_y_name) + theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.ticks.x = element_blank()
) +      labs(color='Age/education group', shape = 'Age/education group',) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1), add = c(1, 0)))
return(p)
}
alpha_peak <- single_plot(df_params, "mean_peak_alpha", "Individual Alpha Peak")
exponent <-  single_plot(df_params, "mean_exponent", "Exponent")
offset <-  single_plot(df_params, "mean_offset", "Offset") +     theme(axis.text.x = element_blank())
fig_params <- alpha_peak + exponent + offset  + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
fig_params
title_params<- glue('figures/specparam_variables.png')
ggsave(here::here(title_params), fig_params,  device='png', dpi=1400)
#Sys.setenv(RETICULATE_PYTHON = "~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
library(reticulate)
reticulate::use_virtualenv("~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
reticulate::repl_python()
mean_data <-df_paramas %>%  group_by(Y_OH_OL) %>% summarise(offset = mean(mean_offset), exponent = mean(mean_exponent))
median_data <-df_paramas %>%  group_by(Y_OH_OL) %>% summarise(offset = median(mean_offset), median = median(mean_exponent))
py_mean <- r_to_py(mean_data )
py_median  <- r_to_py(median_data )
reticulate::repl_python()
after  <- py_to_r(p.final_list)
after  <- py_to_r(py$final_list)
reticulate::repl_python()
after  <- py_to_r(py$final_list)
after  <- py$final_list
View(after)
df  <- py$final_list
ggplot(df, aes(x = date, y = value)) +
geom_line(aes(color = variable, linetype = variable))
View(df)
View(df)
df  <- py$final_list
ggplot(df, aes(x = power, y = frequency)) +
geom_line(aes(color = Y_OH_OL, linetype = Y_OH_OL,))
df  <- py$final_list
ggplot(df, aes( x = frequency, y = power)) +
geom_line(aes(color = Y_OH_OL, linetype = Y_OH_OL,))
df  <- py$final_list
ggplot(df, aes( x = frequency, y = power)) +
geom_line(aes(color = Y_OH_OL,))
df  <- py$final_list
ggplot(df, aes( x = frequency, y = power)) +
geom_line(aes(color = Y_OH_OL, linetype = Y_OH_OL,))
theme_set(theme_minimal())
df  <- py$final_list
ggplot(df, aes( x = frequency, y = power)) +
geom_line(aes(color = Y_OH_OL, linetype = Y_OH_OL,))
View(occipital_data_OH_OL)
library(readr)
Participants_LEMON <- read_csv("data/Participants_LEMON.csv")
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv"))
df_age <- occipital_alpha_offset_exponent %<% left_join(Participants_LEMON, by )
View(Participants_LEMON)
View(occipital_data_OH_OL)
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv")) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_alpha_offset_exponent %<% left_join(Participants_LEMON, by )
View(Participants_LEMON)
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv")) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_alpha_offset_exponent %<% left_join(Participants_LEMON )
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv")) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_alpha_offset_exponent %>% left_join(Participants_LEMON )
View(df_age)
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv")) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_alpha_offset_exponent %>% left_join(Participants_LEMON )
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv", show_col_types = FALSE)) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv"), show_col_types = FALSE) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_alpha_offset_exponent %>% left_join(Participants_LEMON )
View(df_age)
colnames(df_age)
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv"), show_col_types = FALSE) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_alpha_offset_exponent %>% left_join(Participants_LEMON )
ggplot(df, aes(x=age_interval, y=mean_exponent))+
geom_point() +
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv"), show_col_types = FALSE) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_alpha_offset_exponent %>% left_join(Participants_LEMON )
ggplot(df, aes(x=age_interval, y=mean_exponent))+
geom_point()
ggplot(df_age, aes(x=age_interval, y=mean_exponent))+
geom_point()
colnames(df_age)
View(occipital_data_OH_OL)
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv"), show_col_types = FALSE) %>% rename_at(vars(colnames(.)), ~c("subject", "sex", "age_interval"))
df_age <- occipital_data_OH_OL %>% left_join(Participants_LEMON )
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv"), show_col_types = FALSE) %>% rename_at(vars(colnames(.)), ~c("subject", "sex_group", "age_interval"))
df_age <- occipital_data_OH_OL %>% left_join(Participants_LEMON )
View(df_age)
ggplot(df_age, aes(x=age_interval, y=mean_exponent, color=Species))+
geom_point()
View(df_age)
ggplot(df_age, aes(x=age_interval, y=mean_exponent, color=Y_OH_OL))+
geom_point()
install.packages(c("sf", "vtable"))
install.packages(c("sf", "vtable"))
install.packages(c("blob", "commonmark", "gtable", "htmlwidgets", "insight", "learnr", "ps", "psych", "renv", "sf", "tibble", "vctrs", "wk"))
install.packages(c("cli", "datawizard", "htmltools"))
install.packages(c("cli", "datawizard", "htmltools"))
install.packages(c("cli", "datawizard", "htmltools"))
library(readr)
library(ggrain)
library(rlang)
library(patchwork)
library(glue)
library(dplyr)
library(ggpubr)
library(ggsignif)
library(here)
library(reticulate)
use_python("/Users/daniel/.pyenv/versions/3.11.3/envs/poirot-3.11.3/bin/python")
Sys.setenv(RETICULATE_PYTHON = "/Users/daniel/.pyenv/versions/3.11.3/envs/poirot-3.11.3/bin/python")
library(readr)
library(ggrain)
library(rlang)
library(patchwork)
library(glue)
library(dplyr)
library(ggpubr)
library(ggsignif)
library(here)
occipital_data_OH_OL <- read_csv(here("data/final/occipital_data_OH_OL.csv"), show_col_types = FALSE)
df <- occipital_data_OH_OL %>% select(c("TMT_5_zscor_tresh", "CVLT_DEL_MEM_zscor_tresh", "TAP_A_RT_zscor_tresh", "TAP_WM_6_zscor_tresh", "Y_OH_OL"))
my_comparisons <- list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H"))
single_plot <- function(df,x_var_data , x_var_y_name){
p <- ggboxplot(occipital_data_OH_OL,
x = "Y_OH_OL", y = x_var_data,
color = "Y_OH_OL", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Y_OH_OL"
) +
#  geom_signif(
#   comparisons = list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H")),
#  map_signif_level = TRUE, textsize = 6, test = "kruskal.test"
#) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif") +
labs(y = x_var_y_name) + theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.ticks.x = element_blank()
) +      labs(color='Age/education group', shape = 'Age/education group',) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1), add = c(1, 0)))
return(p)
}
Mem1 <-  single_plot(df, "CVLT_DEL_MEM_zscor_tresh", "Delayed memory") +     theme(axis.text.x = element_blank())
WM <-  single_plot(df, "TAP_WM_6_zscor_tresh", "Working Memory")+     theme(axis.text.x = element_blank())
TMT <- single_plot(df, "TMT_5_zscor_tresh", "Visual attention and flexibility")
TAP  <- single_plot(df, "TAP_A_RT_zscor_tresh", "Alertness")
fig <- (Mem1 + WM) / (TMT + TAP)  + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
fig
title<- glue('figures/behavioral_variables.png')
ggsave(here::here(title), fig,  device='png', dpi=1400)
df_paramas <- occipital_data_OH_OL %>% select(c("mean_exponent" , "mean_offset", "mean_peak_alpha" , "Y_OH_OL"))
my_comparisons <- list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H"))
single_plot <- function(df,x_var_data , x_var_y_name){
p <- ggboxplot(occipital_data_OH_OL,
x = "Y_OH_OL", y = x_var_data,
color = "Y_OH_OL", palette = c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Y_OH_OL"
) +
#  geom_signif(
#   comparisons = list(c("O_H", "O_L"), c("O_H", "Y_H"), c("O_L", "Y_H")),
#  map_signif_level = TRUE, textsize = 6, test = "kruskal.test"
#) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif") +
labs(y = x_var_y_name) + theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.ticks.x = element_blank()
) +      labs(color='Age/education group', shape = 'Age/education group',) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1), add = c(1, 0)))
return(p)
}
alpha_peak <- single_plot(df_params, "mean_peak_alpha", "Individual Alpha Peak")
exponent <-  single_plot(df_params, "mean_exponent", "Exponent")
offset <-  single_plot(df_params, "mean_offset", "Offset") +     theme(axis.text.x = element_blank())
fig_params <- alpha_peak + exponent + offset  + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
fig_params
title_params<- glue('figures/specparam_variables.png')
ggsave(here::here(title_params), fig_params,  device='png', dpi=1400)
library(readr)
Participants_LEMON <- read_csv(here::here("data/Participants_LEMON.csv"), show_col_types = FALSE) %>% rename_at(vars(colnames(.)), ~c("subject", "sex_group", "age_interval"))
df_age <- occipital_data_OH_OL %>% left_join(Participants_LEMON )
ggplot(df_age, aes(x=age_interval, y=mean_exponent, color=Y_OH_OL))+
geom_point()
Yes
#Sys.setenv(RETICULATE_PYTHON = "~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
library(reticulate)
reticulate::use_virtualenv("~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
#Sys.setenv(RETICULATE_PYTHON = "~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
# Set the local system env
library(reticulate)
reticulate::use_virtualenv("~/.pyenv/versions/3.11.3/envs/poirot-3.11.3/")
reticulate::repl_python()
#Sys.setenv(RETICULATE_PYTHON = "~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
# Set the local system env
library(reticulate)
reticulate::use_virtualenv("~/.pyenv/versions/3.11.3/envs/poirot-3.11.3/")
reticulate::repl_python()
#Sys.setenv(RETICULATE_PYTHON = "~/.pyenv/versions/3.11.2/envs/poirot-3.11.2/")
# Set the local system env
library(reticulate)
reticulate::use_virtualenv("~/.pyenv/versions/3.11.3/envs/poirot-3.11.3/")
reticulate::repl_python()
Sys.setenv(RETICULATE_PYTHON = "~/.pyenv/versions/3.11.3/envs/poirot-3.11.3/")
# Set the local system env
library(reticulate)
# reticulate::use_virtualenv("~/.pyenv/versions/3.11.3/envs/poirot-3.11.3/")
reticulate::repl_python()
reticulate::repl_python()
